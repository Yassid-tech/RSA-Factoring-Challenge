#!/usr/bin/python3
"""
Factorize as many numbers as possible into a product of two smaller numbers.

Usage: factors <file>
where <file> is a file containing natural numbers to factor.
One number per line.
Assumes all lines have valid natural numbers greater that 1.
No emtpy lines, and no space before/after the valid number.
The file will always end with a new line.
Output format: n=p*q, one factorization per line.
p and q don't have to be prime numbers.
See example.
Processing order for numbers in the file is arbitrary.
The program should run without any dependency; no installations allowed
on the target machine.
Time limit: Program will be killed after 5 seconds if not finished.
Push all scripts, source code, etc..., to your repo.
"""
# library to get arguments
import sys


def factorize():
    """
    function factorize to search file to convert number and format n=p*q
    """
    try:
        revfile = sys.argv[1]
        with open(revfile) as f:
            for revnumber in f:
                revnumber = int(revnumber)
                if revnumber % 2 == 0:
                        print("{}={}*{}".format(revnumber, revnumber // 2, 2))
                        continue
                i = 3
                while i < revnumber // 2:
                    if revnumber % i == 0:
                        print("{}={}*{}".format(revnumber, revnumber // i, i))
                        break
                    i = i + 2
                if i == (revnumber // 2) + 1:
                    print("{}={}*{}".format(revnumber, revnumber, 1))
    except (IndexError):
        pass


# autostart
factorize()
